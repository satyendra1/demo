# This is a basic workflow to help you get started with Actions

name: java-application

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  buildcreation:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      - name: Setup Java JDK
        uses: actions/setup-java@v2.1.0
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
         java-version: 11
# Java distribution. See the list of supported distributions in README file
         distribution: adopt
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
      - name: Build with gradle
        run: ./gradlew build  
      - name: Docker Build & Push Action
  # You may pin to the exact commit or the version.
  # uses: mr-smithers-excellent/docker-build-push@a7fe6652db5c7274374844e81692992f5a2befb9
        uses: mr-smithers-excellent/docker-build-push@v5.6
        with:
    # Name of the Docker image
         image: santyrocker/javaapps
    # Tags override for Docker image
         
    # Target Docker registry
         registry: docker.io
         username: santyrocker
# Docker registry password
         password: ${{ secrets.DOCKER_HUB_PASSWD }}
